<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>

	<!--
		TODO s in here:
		1. Add more basic resolvers 
		2. Externalize the strings
		3. Check how we can access ext strings like %templates.java.resolvers.Type.description
		4. Add default template xml (DONE)
	-->
		

	<extension point="org.eclipse.jdt.ui.javaCompletionProposalComputer"
	   			id="postfix_completion"
	   			name="Postfix Completion">
	   	<proposalCategory icon="icons/elcl16/templateprop_co2.png"/>
	</extension>

 	<extension point="org.eclipse.jdt.ui.javaCompletionProposalComputer"
   				id="org.eclipse.jdt.postfixcompletion"
   				name="Postfix Completion">
   		<javaCompletionProposalComputer
           		categoryId="org.eclipse.jdt.postfixcompletion.postfix_completion"
           		class="org.eclipse.jdt.postfixcompletion.core.PostfixCompletionProposalComputer">
        <partition
              	type="__dftl_partition_content_type">
        </partition>
      	<partition type="__java_string"/>
   		</javaCompletionProposalComputer>
 	</extension>
  	<extension point="org.eclipse.ui.editors.templates">
     	<contextType
           		class="org.eclipse.jdt.postfixcompletion.core.JavaStatementPostfixContextType"
           		id="postfix"
           		name="Java postfix"
           		registryId="org.eclipse.jdt.ui.CompilationUnitEditor">
     	</contextType>
     	<include
            file="templates/default-postfixtemplates.xml">
      	</include>
     	<resolver
            	class="org.eclipse.jdt.internal.corext.template.java.NameResolver"
            	contextTypeId="postfix"
            	description="%templates.java.resolvers.Name.description"
            	name="%templates.java.resolvers.Name.name"
            	type="newName"/>
            
     	<resolver
            	class="org.eclipse.jdt.internal.corext.template.java.VarResolver"
            	contextTypeId="postfix"
            	description="%templates.java.resolvers.Var.description"
            	name="%templates.java.resolvers.Var.name"
            	type="var"/>

      	<resolver
            	class="org.eclipse.jdt.postfixcompletion.resolver.VariableTypeResolver"
            	contextTypeId="postfix"
            	description="%templates.java.resolvers.Type.description"
            	name="%templates.java.resolvers.Type.name"
            	type="newType"/>
      	<resolver
            	class="org.eclipse.jdt.postfixcompletion.resolver.ActualTypeResolver"
            	contextTypeId="postfix"
            	description="Resolves a variable to the actual type. If no variable is given, the variable resolves to java.lang.Object."
            	name="newActualType"
            	type="newActualType"/>
        <resolver
            	class="org.eclipse.jdt.postfixcompletion.resolver.NewFieldResolver"
            	contextTypeId="postfix"
            	description="Creates a new field in the current context. The type of the new field can be specified by the given paramater."
            	name="newField"
            	type="newField"/>
	</extension>
  <!-- 
  XXX Should not be neccessary
  <extension
		point="org.eclipse.jdt.ui.javaCompletionProposalSorters">
		<proposalSorter
			id="org.eclipse.jdt.ui.RelevanceSorter"
			name="%RelevanceSorter.name"
			class="org.eclipse.jdt.internal.ui.text.java.RelevanceSorter"/>
		<proposalSorter
			id="org.eclipse.jdt.ui.AlphabeticSorter"
			name="%AlphabeticSorter.name"
			class="org.eclipse.jdt.internal.ui.text.java.AlphabeticSorter"/>
	</extension>
	-->

</plugin>
